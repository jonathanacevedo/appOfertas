/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package orquestador.api;

import io.swagger.annotations.*;
import orquestador.model.JsonApiBodyRequestGetNegocio;
import orquestador.model.JsonApiBodyRequestNegocio;
import orquestador.model.JsonApiBodyRequestOferta;
import orquestador.model.JsonApiBodyRequestPersona;
import orquestador.model.JsonApiBodyResponseErrors;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-17T14:53:38.878-05:00")

@Api(value = "listar", description = "the listar API")
public interface ListarApi {

    @ApiOperation(value = "buscar negocio", nickname = "listarNegocioIdtrabajadorPost", notes = "retorna todos los negocios", response = JsonApiBodyRequestNegocio.class, tags={ "negocio", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "negocios encontrados", response = JsonApiBodyRequestNegocio.class),
        @ApiResponse(code = 404, message = "datos imcompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/negocio/idtrabajador",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<JsonApiBodyRequestNegocio> listarNegocioIdtrabajadorPost(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody JsonApiBodyRequestGetNegocio body);


    @ApiOperation(value = "buscar negocio", nickname = "listarNegocioTipoPost", notes = "retorna todos los negocios", response = JsonApiBodyRequestNegocio.class, tags={ "negocio", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "negocios encontrados", response = JsonApiBodyRequestNegocio.class),
        @ApiResponse(code = 404, message = "datos imcompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/negocio/tipo",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<JsonApiBodyRequestNegocio> listarNegocioTipoPost(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody JsonApiBodyRequestGetNegocio body);


    @ApiOperation(value = "buscar ofertas", nickname = "listarOfertaGet", notes = "devuelve todas las ofertas", response = JsonApiBodyRequestOferta.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "ofertas encontradas", response = JsonApiBodyRequestOferta.class),
        @ApiResponse(code = 404, message = "datos imcompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/oferta",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<JsonApiBodyRequestOferta> listarOfertaGet();


    @ApiOperation(value = "buscar persona", nickname = "listarPersonaEstadoEstadoGet", notes = "devuelve todas las personas", response = JsonApiBodyRequestPersona.class, tags={ "persona", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "personas encontradas", response = JsonApiBodyRequestPersona.class),
        @ApiResponse(code = 404, message = "datos imcompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/persona/estado/{estado}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<JsonApiBodyRequestPersona> listarPersonaEstadoEstadoGet(@ApiParam(value = "estado de la persona que se esta buscando",required=true) @PathVariable("estado") String estado);


    @ApiOperation(value = "buscar persona", nickname = "listarPersonaGet", notes = "devuelve todas las personas", response = JsonApiBodyRequestPersona.class, tags={ "persona", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "personas encontradas", response = JsonApiBodyRequestPersona.class),
        @ApiResponse(code = 404, message = "datos imcompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/persona",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<JsonApiBodyRequestPersona> listarPersonaGet();


    @ApiOperation(value = "buscar persona", nickname = "listarPersonaIdGet", notes = "devuelve todas las personas", response = JsonApiBodyRequestPersona.class, tags={ "persona", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "personas encontradas", response = JsonApiBodyRequestPersona.class),
        @ApiResponse(code = 404, message = "datos imcompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/persona/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<JsonApiBodyRequestPersona> listarPersonaIdGet(@ApiParam(value = "id de la persona que se esta buscando",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "buscar persona", nickname = "listarPersonaRolRolGet", notes = "devuelve todas las personas", response = JsonApiBodyRequestPersona.class, tags={ "persona", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "personas encontradas", response = JsonApiBodyRequestPersona.class),
        @ApiResponse(code = 404, message = "datos imcompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/listar/persona/rol/{rol}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<JsonApiBodyRequestPersona> listarPersonaRolRolGet(@ApiParam(value = "rol de la persona que se esta buscando",required=true) @PathVariable("rol") String rol);

}
